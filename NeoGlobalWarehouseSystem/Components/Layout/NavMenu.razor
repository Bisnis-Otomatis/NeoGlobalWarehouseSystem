@inject NavigationManager NavigationManager

@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Identity
@inject IDbContextFactory<ApplicationDbContext> ApplicationDbContextFactory

<MudPaper Width="250px" Elevation="0" Class="py-3">
    <MudNavMenu Color="Color.Info">
        <AuthorizeView>
            <NotAuthorized>
                <MudNavLink Href="/Account/Login" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Login">Login</MudNavLink>
            </NotAuthorized>
            <Authorized>
                <MudNavLink Href="/" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Dashboard">Dashboard</MudNavLink>
                <MudNavLink Href="/product" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.AddToQueue">Product</MudNavLink>
                @if (LoggedInUserRole == UserRole.Admin || LoggedInUserRole == UserRole.Storeman)
                {
                    <MudNavLink Href="/employee" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Badge">Employee</MudNavLink>
                }
                @if(LoggedInUserRole == UserRole.Admin || LoggedInUserRole == UserRole.Cashier)
                {
                    <MudNavLink Href="/point-of-sales" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Receipt">Point of Sales</MudNavLink>
                }
                <MudNavLink Href="/supply-request" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.AddShoppingCart">Supply Request</MudNavLink>
                <MudNavLink Href="/transaction" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.ContentPaste">Transaction</MudNavLink>
                <MudNavLink Href="/report" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Dataset">Report</MudNavLink>
                <MudNavLink Href="/account-management" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.VerifiedUser">Account Management</MudNavLink>
                <form action="Account/Logout" method="post">
                    <AntiforgeryToken />
                    
                    <MudButton StartIcon="@Icons.Material.Filled.Logout" name="ReturnUrl"
                               Class="mud-nav-link ms-2"
                               ButtonType="ButtonType.Submit"
                               Variant="Variant.Text">
                        Logout
                    </MudButton>
                </form>
            </Authorized>
        </AuthorizeView>
    </MudNavMenu>
</MudPaper>
@code{
    [CascadingParameter]
    Task<AuthenticationState>? AuthStateTask { get; set; }
    UserRole? LoggedInUserRole { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (AuthStateTask != null)
        {
            var authState = await AuthStateTask;
            var user = authState.User;
            if (user.Identity?.IsAuthenticated == true)
            {
                var userId = user.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;

                if (!string.IsNullOrEmpty(userId))
                {
                    using var dbContext = ApplicationDbContextFactory.CreateDbContext();
                    int intUserId = int.Parse(userId);
                    var loggedInUser = await dbContext.Users.FindAsync(intUserId);

                    if (loggedInUser != null)
                    {
                        LoggedInUserRole = loggedInUser.Role;
                    }
                }
            }
        }
    }
}